/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.5
 */
;goog.provide("ngmaterial.components.menuBar");goog.require("ngmaterial.components.icon");goog.require("ngmaterial.components.menu");goog.require("ngmaterial.core");angular.module("material.components.menuBar",["material.core","material.components.icon","material.components.menu"]);MenuBarController["$inject"]=["$scope","$rootScope","$element","$attrs","$mdConstant","$document","$mdUtil","$timeout"];angular.module("material.components.menuBar").controller("MenuBarController",MenuBarController);var BOUND_MENU_METHODS=["handleKeyDown","handleMenuHover","scheduleOpenHoveredMenu","cancelScheduledOpen"];function MenuBarController(g,e,h,f,a,d,b,c){this.$element=h;this.$attrs=f;this.$mdConstant=a;this.$mdUtil=b;this.$document=d;this.$scope=g;this.$rootScope=e;this.$timeout=c;var i=this;angular.forEach(BOUND_MENU_METHODS,function(j){i[j]=angular.bind(i,i[j])})}MenuBarController.prototype.init=function(){var a=this.$element;var e=this.$mdUtil;var d=this.$scope;var c=this;var b=[];a.on("keydown",this.handleKeyDown);this.parentToolbar=e.getClosest(a,"MD-TOOLBAR");b.push(this.$rootScope.$on("$mdMenuOpen",function(g,f){if(c.getMenus().indexOf(f[0])!=-1){a[0].classList.add("md-open");f[0].classList.add("md-open");c.currentlyOpenMenu=f.controller("mdMenu");c.currentlyOpenMenu.registerContainerProxy(c.handleKeyDown);c.enableOpenOnHover()}}));b.push(this.$rootScope.$on("$mdMenuClose",function(j,h,i){var g=c.getMenus();if(g.indexOf(h[0])!=-1){a[0].classList.remove("md-open");h[0].classList.remove("md-open")}if(a[0].contains(h[0])){var f=h[0];while(f&&g.indexOf(f)==-1){f=e.getClosest(f,"MD-MENU",true)}if(f){if(!i.skipFocus){f.querySelector("button:not([disabled])").focus()}c.currentlyOpenMenu=undefined;c.disableOpenOnHover();c.setKeyboardMode(true)}}}));d.$on("$destroy",function(){c.disableOpenOnHover();while(b.length){b.shift()()}});this.setKeyboardMode(true)};MenuBarController.prototype.setKeyboardMode=function(a){if(a){this.$element[0].classList.add("md-keyboard-mode")}else{this.$element[0].classList.remove("md-keyboard-mode")}};MenuBarController.prototype.enableOpenOnHover=function(){if(this.openOnHoverEnabled){return}var a=this;a.openOnHoverEnabled=true;if(a.parentToolbar){a.parentToolbar.classList.add("md-has-open-menu");a.$mdUtil.nextTick(function(){angular.element(a.parentToolbar).on("click",a.handleParentClick)},false)}angular.element(a.getMenus()).on("mouseenter",a.handleMenuHover)};MenuBarController.prototype.handleMenuHover=function(a){this.setKeyboardMode(false);if(this.openOnHoverEnabled){this.scheduleOpenHoveredMenu(a)}};MenuBarController.prototype.disableOpenOnHover=function(){if(!this.openOnHoverEnabled){return}this.openOnHoverEnabled=false;if(this.parentToolbar){this.parentToolbar.classList.remove("md-has-open-menu");angular.element(this.parentToolbar).off("click",this.handleParentClick)}angular.element(this.getMenus()).off("mouseenter",this.handleMenuHover)};MenuBarController.prototype.scheduleOpenHoveredMenu=function(c){var a=angular.element(c.currentTarget);var b=a.controller("mdMenu");this.setKeyboardMode(false);this.scheduleOpenMenu(b)};MenuBarController.prototype.scheduleOpenMenu=function(c){var a=this;var b=this.$timeout;if(c!=a.currentlyOpenMenu){b.cancel(a.pendingMenuOpen);a.pendingMenuOpen=b(function(){a.pendingMenuOpen=undefined;if(a.currentlyOpenMenu){a.currentlyOpenMenu.close(true,{closeAll:true})}c.open()},200,false)}};MenuBarController.prototype.handleKeyDown=function(h){var b=this.$mdConstant.KEY_CODE;var f=this.currentlyOpenMenu;var d=f&&f.isOpen;this.setKeyboardMode(true);var g,c,a;switch(h.keyCode){case b.DOWN_ARROW:if(f){f.focusMenuContainer()}else{this.openFocusedMenu()}g=true;break;case b.UP_ARROW:f&&f.close();g=true;break;case b.LEFT_ARROW:c=this.focusMenu(-1);if(d){a=angular.element(c).controller("mdMenu");this.scheduleOpenMenu(a)}g=true;break;case b.RIGHT_ARROW:c=this.focusMenu(+1);if(d){a=angular.element(c).controller("mdMenu");this.scheduleOpenMenu(a)}g=true;break}if(g){h&&h.preventDefault&&h.preventDefault();h&&h.stopImmediatePropagation&&h.stopImmediatePropagation()}};MenuBarController.prototype.focusMenu=function(b){var a=this.getMenus();var d=this.getFocusedMenuIndex();if(d==-1){d=this.getOpenMenuIndex()}var c=false;if(d==-1){d=0;c=true}else{if(b<0&&d>0||b>0&&d<a.length-b){d+=b;c=true}}if(c){a[d].querySelector("button").focus();return a[d]}};MenuBarController.prototype.openFocusedMenu=function(){var a=this.getFocusedMenu();a&&angular.element(a).controller("mdMenu").open()};MenuBarController.prototype.getMenus=function(){var a=this.$element;return this.$mdUtil.nodesToArray(a[0].children).filter(function(b){return b.nodeName=="MD-MENU"})};MenuBarController.prototype.getFocusedMenu=function(){return this.getMenus()[this.getFocusedMenuIndex()]};MenuBarController.prototype.getFocusedMenuIndex=function(){var c=this.$mdUtil;var a=c.getClosest(this.$document[0].activeElement,"MD-MENU");if(!a){return -1}var b=this.getMenus().indexOf(a);return b};MenuBarController.prototype.getOpenMenuIndex=function(){var b=this.getMenus();for(var a=0;a<b.length;++a){if(b[a].classList.contains("md-open")){return a}}return -1};MenuBarController.prototype.handleParentClick=function(b){var a=this.querySelector("md-menu.md-open");if(a&&!a.contains(b.target)){angular.element(a).controller("mdMenu").close(true,{closeAll:true})}};MenuBarDirective["$inject"]=["$mdUtil","$mdTheming"];angular.module("material.components.menuBar").directive("mdMenuBar",MenuBarDirective);function MenuBarDirective(c,a){return{restrict:"E",require:"mdMenuBar",controller:"MenuBarController",compile:function b(f,e){if(!e.ariaRole){f[0].setAttribute("role","menubar")}angular.forEach(f[0].children,function(g){if(g.nodeName=="MD-MENU"){if(!g.hasAttribute("md-position-mode")){g.setAttribute("md-position-mode","left bottom");g.querySelector("button, a, md-button").setAttribute("role","menuitem")}var h=c.nodesToArray(g.querySelectorAll("md-menu-content"));angular.forEach(h,function(i){i.classList.add("md-menu-bar-menu");i.classList.add("md-dense");if(!i.hasAttribute("width")){i.setAttribute("width",5)}})}});f.find("md-menu-item").addClass("md-in-menu-bar");return function d(i,h,g,j){h.addClass("_md");a(i,h);j.init()}}}}angular.module("material.components.menuBar").directive("mdMenuDivider",MenuDividerDirective);function MenuDividerDirective(){return{restrict:"E",compile:function(b,a){if(!a.role){b[0].setAttribute("role","separator")}}}}MenuItemController["$inject"]=["$scope","$element","$attrs"];angular.module("material.components.menuBar").controller("MenuItemController",MenuItemController);function MenuItemController(c,b,a){this.$element=b;this.$attrs=a;this.$scope=c}MenuItemController.prototype.init=function(c){var b=this.$element;var a=this.$attrs;this.ngModel=c;if(a.type=="checkbox"||a.type=="radio"){this.mode=a.type;this.iconEl=b[0].children[0];this.buttonEl=b[0].children[1];if(c){this.initClickListeners()}}};MenuItemController.prototype.clearNgAria=function(){var a=this.$element[0];var b=["role","tabindex","aria-invalid","aria-checked"];angular.forEach(b,function(c){a.removeAttribute(c)})};MenuItemController.prototype.initClickListeners=function(){var l=this;var c=this.ngModel;var j=this.$scope;var i=this.$attrs;var k=this.$element;var f=this.mode;this.handleClick=angular.bind(this,this.handleClick);var h=this.iconEl;var d=angular.element(this.buttonEl);var e=this.handleClick;i.$observe("disabled",g);g(i.disabled);c.$render=function b(){l.clearNgAria();if(a()){h.style.display="";d.attr("aria-checked","true")}else{h.style.display="none";d.attr("aria-checked","false")}};j.$$postDigest(c.$render);function a(){if(f=="radio"){var m=i.ngValue?j.$eval(i.ngValue):i.value;return c.$modelValue==m}else{return c.$modelValue}}function g(m){if(m){d.off("click",e)}else{d.on("click",e)}}};MenuItemController.prototype.handleClick=function(c){var f=this.mode;var d=this.ngModel;var a=this.$attrs;var b;if(f=="checkbox"){b=!d.$modelValue}else{if(f=="radio"){b=a.ngValue?this.$scope.$eval(a.ngValue):a.value}}d.$setViewValue(b);d.$render()};MenuItemDirective["$inject"]=["$mdUtil","$mdConstant","$$mdSvgRegistry"];angular.module("material.components.menuBar").directive("mdMenuItem",MenuItemDirective);function MenuItemDirective(c,a,b){return{controller:"MenuItemController",require:["mdMenuItem","?ngModel"],priority:a.BEFORE_NG_ARIA,compile:function(d,l){var f=l.type;var i="md-in-menu-bar";if((f=="checkbox"||f=="radio")&&d.hasClass(i)){var j=d[0].textContent;var e=angular.element('<md-button type="button"></md-button>');var k='<md-icon md-svg-src="'+b.mdChecked+'"></md-icon>';e.html(j);e.attr("tabindex","0");d.html("");d.append(angular.element(k));d.append(e);d.addClass("md-indent").removeClass(i);h("role",f=="checkbox"?"menuitemcheckbox":"menuitemradio",e);g("ng-disabled")}else{h("role","menuitem",d[0].querySelector("md-button, button, a"))}return function(p,o,n,m){var q=m[0];var r=m[1];q.init(r)};function h(m,o,n){n=n||d;if(n instanceof angular.element){n=n[0]}if(!n.hasAttribute(m)){n.setAttribute(m,o)}}function g(n){var m=c.prefixer(n);angular.forEach(m,function(o){if(d[0].hasAttribute(o)){var p=d[0].getAttribute(o);e[0].setAttribute(o,p);d[0].removeAttribute(o)}})}}}}ngmaterial.components.menuBar=angular.module("material.components.menuBar");