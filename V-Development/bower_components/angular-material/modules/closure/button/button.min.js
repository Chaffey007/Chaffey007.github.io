/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.5
 */
;goog.provide("ngmaterial.components.button");goog.require("ngmaterial.core");MdButtonDirective["$inject"]=["$mdButtonInkRipple","$mdTheming","$mdAria","$mdInteraction"];MdAnchorDirective["$inject"]=["$mdTheming"];angular.module("material.components.button",["material.core"]).directive("mdButton",MdButtonDirective).directive("a",MdAnchorDirective);function MdAnchorDirective(b){return{restrict:"E",link:function a(d,c){b(c)}}}function MdButtonDirective(g,f,e,d){return{restrict:"EA",replace:true,transclude:true,template:b,link:a};function c(h){return angular.isDefined(h.href)||angular.isDefined(h.ngHref)||angular.isDefined(h.ngLink)||angular.isDefined(h.uiSref)}function b(j,h){if(c(h)){return'<a class="md-button" ng-transclude></a>'}else{var i=(typeof h.type==="undefined")?"button":h.type;return'<button class="md-button" type="'+i+'" ng-transclude></button>'}}function a(j,i,h){f(i);g.attach(j,i);e.expectWithoutText(i,"aria-label");if(c(h)&&angular.isDefined(h.ngDisabled)){j.$watch(h.ngDisabled,function(k){i.attr("tabindex",k?-1:0)})}i.on("click",function(k){if(h.disabled===true){k.preventDefault();k.stopImmediatePropagation()}});if(!i.hasClass("md-no-focus")){i.on("focus",function(){if(!d.isUserInvoked()||d.getLastInteractionType()==="keyboard"){i.addClass("md-focused")}});i.on("blur",function(){i.removeClass("md-focused")})}}}ngmaterial.components.button=angular.module("material.components.button");