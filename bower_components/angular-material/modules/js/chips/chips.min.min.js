/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.4-master-87d1cb1
 */
;!function(j,F,B){function y(a,d,h,c,f){this.$scope=a,this.$element=d,this.$mdConstant=h,this.$timeout=c,this.$mdUtil=f,this.isEditting=!1,this.parentController=B,this.enableChipEdit=!1}function k(c,a,h,d){function f(n,u,s,r){var m=r.shift(),t=r.shift(),C=F.element(u[0].querySelector(".md-chip-content"));c(u),m&&(t.init(m),C.append(h(e)(n)),C.on("blur",function(){m.resetSelectedChip(),m.$scope.$applyAsync()})),d(function(){m&&m.shouldFocusLastChip&&m.focusLastChipThenInput()})}var e=a.processTemplate(H);return{restrict:"E",require:["^?mdChips","mdChip"],link:f,controller:"MdChipCtrl"}}function x(a){function c(h,d,l,f){d.on("click",function(e){h.$apply(function(){f.removeChip(h.$$replacedScope.$index)})}),a(function(){d.attr({tabindex:-1,"aria-hidden":!0}),d.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:c}}function v(a){function c(l,d,p){var f=l.$parent.$mdChipsCtrl,m=f.parent.$new(!1,f.parent);m.$$replacedScope=l,m.$chip=l.$chip,m.$index=l.$index,m.$mdChipsCtrl=f;var h=f.$scope.$eval(p.mdChipTransclude);d.html(h),a(d.contents())(m)}return{restrict:"EA",terminal:!0,link:c,scope:!1}}function w(c,h,a,m,d,l,f){this.$timeout=l,this.$mdConstant=a,this.$scope=c,this.parent=c.$parent,this.$mdUtil=f,this.$log=m,this.$element=d,this.$attrs=h,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.autocompleteCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.enableChipEdit=f.parseAttributeBoolean(h.mdEnableChipEdit),this.addOnBlur=f.parseAttributeBoolean(h.mdAddOnBlur),this.inputAriaLabel="Chips input.",this.containerHint="Chips container. Use arrow keys to select chips.",this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useTransformChip=!1,this.useOnAdd=!1,this.useOnRemove=!1,this.wrapperId="",this.contentIds=[],this.ariaTabIndex=null,this.chipAppendDelay=I,this.init()}function D(C,u,l,f,J,d){function a(e,i){function o(p){if(i.ngModel){var r=t[0].querySelector(p);return r&&r.outerHTML}}var t=i.$mdUserTemplate;i.$mdUserTemplate=null;var K=o("md-chips>md-chip-template"),L=u.prefixer().buildList("md-chip-remove").map(function(p){return"md-chips>*["+p+"]"}).join(","),n=o(L)||m.remove,M=K||m["default"],h=o("md-chips>md-autocomplete")||o("md-chips>input")||m.input,s=t.find("md-chip");return t[0].querySelector("md-chip-template>*[md-chip-remove]")&&f.warn("invalid placement of md-chip-remove within md-chip-template."),function(R,O,N,Q){u.initOptionalProperties(R,i),C(O);var p=Q[0];if(K&&(p.enableChipEdit=!1),p.chipContentsTemplate=M,p.chipRemoveTemplate=n,p.chipInputTemplate=h,p.mdCloseIcon=d.mdClose,O.attr({tabindex:-1}).on("focus",function(){p.onFocus()}),i.ngModel&&(p.configureNgModel(O.controller("ngModel")),N.mdTransformChip&&p.useTransformChipExpression(),N.mdOnAppend&&p.useOnAppendExpression(),N.mdOnAdd&&p.useOnAddExpression(),N.mdOnRemove&&p.useOnRemoveExpression(),N.mdOnSelect&&p.useOnSelectExpression(),h!=m.input&&R.$watch("$mdChipsCtrl.readonly",function(r){r||u.nextTick(function(){if(0===h.indexOf("<md-autocomplete")){var S=O.find("md-autocomplete");p.configureAutocomplete(S.controller("mdAutocomplete"))}p.configureUserInput(O.find("input"))})}),u.nextTick(function(){var r=O.find("input");r&&r.toggleClass("md-input",!0)})),s.length>0){var P=l(s.clone())(R.$parent);J(function(){O.find("md-chips-wrap").prepend(P)})}}}function c(){return{chips:u.processTemplate(z),input:u.processTemplate(g),"default":u.processTemplate(q),remove:u.processTemplate(E)}}var m=c();return{template:function(h,i){return i.$mdUserTemplate=h.clone(),m.chips},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:a,scope:{readonly:"=readonly",removable:"=mdRemovable",placeholder:"@",secondaryPlaceholder:"@",maxChips:"@mdMaxChips",transformChip:"&mdTransformChip",onAppend:"&mdOnAppend",onAdd:"&mdOnAdd",onRemove:"&mdOnRemove",onSelect:"&mdOnSelect",inputAriaLabel:"@",containerHint:"@",deleteHint:"@",deleteButtonLabel:"@",separatorKeys:"=?mdSeparatorKeys",requireMatch:"=?mdRequireMatch",chipAppendDelayString:"@?mdChipAppendDelay"}}}function A(){this.selectedItem=null,this.searchText=""}function G(c,d){function a(e,f){return function(h,l,t,m){var n=m;d.initOptionalProperties(h,f),c(l),l.attr("tabindex","-1"),t.$observe("mdChipAppendDelay",function(i){n.chipAppendDelay=i})}}return{template:function(f,h){return b},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:a,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch",minLength:"=?mdMinLength",highlightFlags:"@?mdHighlightFlags",chipAppendDelay:"@?mdChipAppendDelay"}}}F.module("material.components.chips",["material.core","material.components.autocomplete"]),y.$inject=["$scope","$element","$mdConstant","$timeout","$mdUtil"],F.module("material.components.chips").controller("MdChipCtrl",y),y.prototype.init=function(a){this.parentController=a,this.enableChipEdit=this.parentController.enableChipEdit,this.enableChipEdit&&(this.$element.on("keydown",this.chipKeyDown.bind(this)),this.$element.on("mousedown",this.chipMouseDown.bind(this)),this.getChipContent().addClass("_md-chip-content-edit-is-enabled"))},y.prototype.getChipContent=function(){var a=this.$element[0].getElementsByClassName("md-chip-content");return F.element(a[0])},y.prototype.getContentElement=function(){return F.element(this.getChipContent().children()[0])},y.prototype.getChipIndex=function(){return parseInt(this.$element.attr("index"))},y.prototype.goOutOfEditMode=function(){if(this.isEditting){this.isEditting=!1,this.$element.removeClass("_md-chip-editing"),this.getChipContent()[0].contentEditable="false";var a=this.getChipIndex(),c=this.getContentElement().text();c?(this.parentController.updateChipContents(a,this.getContentElement().text()),this.$mdUtil.nextTick(function(){this.parentController.selectedChip===a&&this.parentController.focusChip(a)}.bind(this))):this.parentController.removeChipAndFocusInput(a)}},y.prototype.selectNodeContents=function(c){var a,d;document.body.createTextRange?(a=document.body.createTextRange(),a.moveToElementText(c),a.select()):j.getSelection&&(d=j.getSelection(),a=document.createRange(),a.selectNodeContents(c),d.removeAllRanges(),d.addRange(a))},y.prototype.goInEditMode=function(){this.isEditting=!0,this.$element.addClass("_md-chip-editing"),this.getChipContent()[0].contentEditable="true",this.getChipContent().on("blur",function(){this.goOutOfEditMode()}.bind(this)),this.selectNodeContents(this.getChipContent()[0])},y.prototype.chipKeyDown=function(a){this.isEditting||a.keyCode!==this.$mdConstant.KEY_CODE.ENTER&&a.keyCode!==this.$mdConstant.KEY_CODE.SPACE?this.isEditting&&a.keyCode===this.$mdConstant.KEY_CODE.ENTER&&(a.preventDefault(),this.goOutOfEditMode()):(a.preventDefault(),this.goInEditMode())},y.prototype.chipMouseDown=function(){this.getChipIndex()==this.parentController.selectedChip&&this.enableChipEdit&&!this.isEditting&&this.goInEditMode()},k.$inject=["$mdTheming","$mdUtil","$compile","$timeout"],F.module("material.components.chips").directive("mdChip",k);var H='    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    </span>';x.$inject=["$timeout"],F.module("material.components.chips").directive("mdChipRemove",x),v.$inject=["$compile"],F.module("material.components.chips").directive("mdChipTransclude",v),w.$inject=["$scope","$attrs","$mdConstant","$log","$element","$timeout","$mdUtil"];var I=300;F.module("material.components.chips").controller("MdChipsCtrl",w),w.prototype.init=function(){var a=this;a.wrapperId="_md-chips-wrapper-"+a.$mdUtil.nextUid(),a.$scope.$watchCollection("$mdChipsCtrl.items",function(){a.setupInputAria(),a.setupWrapperAria()}),a.$attrs.$observe("mdChipAppendDelay",function(c){a.chipAppendDelay=parseInt(c)||I})},w.prototype.setupInputAria=function(){var a=this.$element.find("input");a&&(a.attr("role","textbox"),a.attr("aria-multiline",!0))},w.prototype.setupWrapperAria=function(){var a=this,c=this.$element.find("md-chips-wrap");this.items&&this.items.length?(c.attr("role","listbox"),this.contentIds=this.items.map(function(){return a.wrapperId+"-chip-"+a.$mdUtil.nextUid()}),c.attr("aria-owns",this.contentIds.join(" "))):(c.removeAttr("role"),c.removeAttr("aria-owns"))},w.prototype.inputKeydown=function(a){var c=this.getChipBuffer();if(!(this.autocompleteCtrl&&a.isDefaultPrevented&&a.isDefaultPrevented())){if(a.keyCode===this.$mdConstant.KEY_CODE.BACKSPACE){if(0!==this.getCursorPosition(a.target)){return}return a.preventDefault(),a.stopPropagation(),void (this.items.length&&this.selectAndFocusChipSafe(this.items.length-1))}if((!this.separatorKeys||this.separatorKeys.length<1)&&(this.separatorKeys=[this.$mdConstant.KEY_CODE.ENTER]),this.separatorKeys.indexOf(a.keyCode)!==-1){if(this.autocompleteCtrl&&this.requireMatch||!c){return}if(a.preventDefault(),this.hasMaxChipsReached()){return}return this.appendChip(c.trim()),this.resetChipBuffer(),!1}}},w.prototype.getCursorPosition=function(a){try{if(a.selectionStart===a.selectionEnd){return a.selectionStart}}catch(c){if(!a.value){return 0}}},w.prototype.updateChipContents=function(a,c){a>=0&&a<this.items.length&&(this.items[a]=c,this.ngModelCtrl.$setDirty())},w.prototype.isEditingChip=function(){return !!this.$element[0].querySelector("._md-chip-editing")},w.prototype.isRemovable=function(){return !!this.ngModelCtrl&&(this.readonly?this.removable:!F.isDefined(this.removable)||this.removable)},w.prototype.chipKeydown=function(a){if(!this.getChipBuffer()&&!this.isEditingChip()){switch(a.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0){return}if(a.preventDefault(),!this.isRemovable()){return}this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:a.preventDefault(),(this.selectedChip<0||this.readonly&&0==this.selectedChip)&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:a.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0){return}a.preventDefault(),this.onFocus()}}},w.prototype.getPlaceholder=function(){var a=this.items&&this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return a?this.secondaryPlaceholder:this.placeholder},w.prototype.removeAndSelectAdjacentChip=function(c){var d=this,a=d.getAdjacentChipIndex(c);this.$element[0].querySelector("md-chips-wrap"),this.$element[0].querySelector('md-chip[index="'+c+'"]');d.removeChip(c),d.$timeout(function(){d.$timeout(function(){d.selectAndFocusChipSafe(a)})})},w.prototype.resetSelectedChip=function(){this.selectedChip=-1,this.ariaTabIndex=null},w.prototype.getAdjacentChipIndex=function(a){var c=this.items.length-1;return 0==c?-1:a==c?a-1:a},w.prototype.appendChip=function(c){if(this.shouldFocusLastChip=!0,this.useTransformChip&&this.transformChip){var a=this.transformChip({$chip:c});F.isDefined(a)&&(c=a)}if(F.isObject(c)){var f=this.items.some(function(h){return F.equals(c,h)});if(f){return}}if(!(null==c||this.items.indexOf(c)+1)){var d=this.items.push(c),e=d-1;this.ngModelCtrl.$setDirty(),this.validateModel(),this.useOnAdd&&this.onAdd&&this.onAdd({$chip:c,$index:e})}},w.prototype.useTransformChipExpression=function(){this.useTransformChip=!0},w.prototype.useOnAddExpression=function(){this.useOnAdd=!0},w.prototype.useOnRemoveExpression=function(){this.useOnRemove=!0},w.prototype.useOnSelectExpression=function(){this.useOnSelect=!0},w.prototype.getChipBuffer=function(){var a=this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer;return F.isString(a)?a:""},w.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},w.prototype.hasMaxChipsReached=function(){return F.isString(this.maxChips)&&(this.maxChips=parseInt(this.maxChips,10)||0),this.maxChips>0&&this.items.length>=this.maxChips},w.prototype.validateModel=function(){this.ngModelCtrl.$setValidity("md-max-chips",!this.hasMaxChipsReached())},w.prototype.removeChip=function(a){var c=this.items.splice(a,1);this.ngModelCtrl.$setDirty(),this.validateModel(),c&&c.length&&this.useOnRemove&&this.onRemove&&this.onRemove({$chip:c[0],$index:a})},w.prototype.removeChipAndFocusInput=function(a){this.removeChip(a),this.autocompleteCtrl?(this.autocompleteCtrl.hidden=!0,this.$mdUtil.nextTick(this.onFocus.bind(this))):this.onFocus()},w.prototype.selectAndFocusChipSafe=function(a){if(!this.items.length||a===-1){return this.focusInput()}if(a>=this.items.length){if(!this.readonly){return this.onFocus()}a=0}a=Math.max(a,0),a=Math.min(a,this.items.length-1),this.selectChip(a),this.focusChip(a)},w.prototype.focusLastChipThenInput=function(){var a=this;a.shouldFocusLastChip=!1,a.focusChip(this.items.length-1),a.$timeout(function(){a.focusInput()},a.chipAppendDelay)},w.prototype.focusInput=function(){this.selectChip(-1),this.onFocus()},w.prototype.selectChip=function(a){a>=-1&&a<=this.items.length?(this.selectedChip=a,this.useOnSelect&&this.onSelect&&this.onSelect({$chip:this.items[a]})):this.$log.warn("Selected Chip index out of bounds; ignoring.")},w.prototype.selectAndFocusChip=function(a){this.selectChip(a),a!=-1&&this.focusChip(a)},w.prototype.focusChip=function(a){var c=this.$element[0].querySelector('md-chip[index="'+a+'"] .md-chip-content');this.ariaTabIndex=a,c.focus()},w.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var c=this;a.$render=function(){c.items=c.ngModelCtrl.$viewValue}},w.prototype.onFocus=function(){var a=this.$element[0].querySelector("input");a&&a.focus(),this.resetSelectedChip()},w.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.setupInputAria(),this.resetSelectedChip()},w.prototype.onInputBlur=function(){this.inputHasFocus=!1,this.shouldAddOnBlur()&&(this.appendChip(this.getChipBuffer().trim()),this.resetChipBuffer())},w.prototype.configureUserInput=function(c){this.userInputElement=c;var a=c.controller("ngModel");a!=this.ngModelCtrl&&(this.userInputNgModelCtrl=a);var f=this.$scope,d=this,e=function(l,h){f.$evalAsync(F.bind(d,h,l))};c.attr({tabindex:0}).on("keydown",function(h){e(h,d.inputKeydown)}).on("focus",function(h){e(h,d.onInputFocus)}).on("blur",function(h){e(h,d.onInputBlur)})},w.prototype.configureAutocomplete=function(a){a&&(this.autocompleteCtrl=a,a.registerSelectedItemWatcher(F.bind(this,function(c){if(c){if(this.hasMaxChipsReached()){return}this.appendChip(c),this.resetChipBuffer()}})),this.$element.find("input").on("focus",F.bind(this,this.onInputFocus)).on("blur",F.bind(this,this.onInputBlur)))},w.prototype.shouldAddOnBlur=function(){this.validateModel();var c=this.getChipBuffer().trim(),d=this.ngModelCtrl.$valid,a=this.autocompleteCtrl&&!this.autocompleteCtrl.hidden;return this.userInputNgModelCtrl&&(d=d&&this.userInputNgModelCtrl.$valid),this.addOnBlur&&!this.requireMatch&&c&&d&&!a},w.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0},w.prototype.contentIdFor=function(a){return this.contentIds[a]},D.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout","$$mdSvgRegistry"],F.module("material.components.chips").directive("mdChips",D);var z='      <md-chips-wrap          id="{{$mdChipsCtrl.wrapperId}}"          tabindex="{{$mdChipsCtrl.readonly ? 0 : -1}}"          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus(),                       \'md-readonly\': !$mdChipsCtrl.ngModelCtrl || $mdChipsCtrl.readonly,                      \'md-removable\': $mdChipsCtrl.isRemovable() }"          aria-setsize="{{$mdChipsCtrl.items.length}}"          class="md-chips">        <span ng-if="$mdChipsCtrl.readonly" class="md-visually-hidden">          {{$mdChipsCtrl.containerHint}}        </span>        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index, \'md-readonly\': !$mdChipsCtrl.ngModelCtrl || $mdChipsCtrl.readonly}">          <div class="md-chip-content"              tabindex="{{$mdChipsCtrl.ariaTabIndex == $index ? 0 : -1}}"              id="{{$mdChipsCtrl.contentIdFor($index)}}"              role="option"              aria-selected="{{$mdChipsCtrl.selectedChip == $index}}"               aria-posinset="{{$index}}"              ng-click="!$mdChipsCtrl.readonly && $mdChipsCtrl.focusChip($index)"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div ng-if="$mdChipsCtrl.isRemovable()"               class="md-chip-remove-container"               tabindex="-1"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div class="md-chip-input-container" ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl">          <div md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>',g='        <input            class="md-input"            tabindex="0"            aria-label="{{$mdChipsCtrl.inputAriaLabel}}"             placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',q="      <span>{{$chip}}</span>",E='      <button          class="md-chip-remove"          ng-if="$mdChipsCtrl.isRemovable()"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          type="button"          tabindex="-1">        <md-icon md-svg-src="{{ $mdChipsCtrl.mdCloseIcon }}"></md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </button>';F.module("material.components.chips").controller("MdContactChipsCtrl",A),A.prototype.queryContact=function(a){return this.contactQuery({$query:a})},A.prototype.itemName=function(a){return a[this.contactName]},G.$inject=["$mdTheming","$mdUtil"],F.module("material.components.chips").directive("mdContactChips",G);var b='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-chip-append-delay="{{$mdContactChipsCtrl.chipAppendDelay}}"           md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.itemName(item)"              md-no-cache="true"              md-min-length="$mdContactChipsCtrl.minLength"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}"                  ng-if="item[$mdContactChipsCtrl.contactImage]" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText"                    md-highlight-flags="{{$mdContactChipsCtrl.highlightFlags}}">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}"                  ng-if="$chip[$mdContactChipsCtrl.contactImage]" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>'}(window,window.angular);