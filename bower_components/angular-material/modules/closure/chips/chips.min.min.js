/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.4-master-87d1cb1
 */
;function MdChipCtrl(b,d,a,f,c){this.$scope=b,this.$element=d,this.$mdConstant=a,this.$timeout=f,this.$mdUtil=c,this.isEditting=!1,this.parentController=void 0,this.enableChipEdit=!1}function MdChip(b,d,a,g){function c(o,k,m,n){var j=n.shift(),i=n.shift(),q=angular.element(k[0].querySelector(".md-chip-content"));b(k),j&&(i.init(j),q.append(a(f)(o)),q.on("blur",function(){j.resetSelectedChip(),j.$scope.$applyAsync()})),g(function(){j&&j.shouldFocusLastChip&&j.focusLastChipThenInput()})}var f=d.processTemplate(DELETE_HINT_TEMPLATE);return{restrict:"E",require:["^?mdChips","mdChip"],link:c,controller:"MdChipCtrl"}}function MdChipRemove(a){function b(f,c,g,d){c.on("click",function(e){f.$apply(function(){d.removeChip(f.$$replacedScope.$index)})}),a(function(){c.attr({tabindex:-1,"aria-hidden":!0}),c.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:b}}function MdChipTransclude(a){function b(g,c,j){var d=g.$parent.$mdChipsCtrl,h=d.parent.$new(!1,d.parent);h.$$replacedScope=g,h.$chip=g.$chip,h.$index=g.$index,h.$mdChipsCtrl=d;var f=d.$scope.$eval(j.mdChipTransclude);c.html(f),a(c.contents())(h)}return{restrict:"EA",terminal:!0,link:b,scope:!1}}function MdChipsCtrl(b,f,a,h,c,g,d){this.$timeout=g,this.$mdConstant=a,this.$scope=b,this.parent=b.$parent,this.$mdUtil=d,this.$log=h,this.$element=c,this.$attrs=f,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.autocompleteCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.enableChipEdit=d.parseAttributeBoolean(f.mdEnableChipEdit),this.addOnBlur=d.parseAttributeBoolean(f.mdAddOnBlur),this.inputAriaLabel="Chips input.",this.containerHint="Chips container. Use arrow keys to select chips.",this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useTransformChip=!1,this.useOnAdd=!1,this.useOnRemove=!1,this.wrapperId="",this.contentIds=[],this.ariaTabIndex=null,this.chipAppendDelay=DEFAULT_CHIP_APPEND_DELAY,this.init()}function MdChips(k,j,f,d,l,c){function a(e,i){function o(m){if(i.ngModel){var p=s[0].querySelector(m);return p&&p.outerHTML}}var s=i.$mdUserTemplate;i.$mdUserTemplate=null;var v=o("md-chips>md-chip-template"),t=j.prefixer().buildList("md-chip-remove").map(function(m){return"md-chips>*["+m+"]"}).join(","),h=o(t)||g.remove,n=v||g["default"],w=o("md-chips>md-autocomplete")||o("md-chips>input")||g.input,q=s.find("md-chip");return s[0].querySelector("md-chip-template>*[md-chip-remove]")&&d.warn("invalid placement of md-chip-remove within md-chip-template."),function(z,p,m,x){j.initOptionalProperties(z,i),k(p);var y=x[0];if(v&&(y.enableChipEdit=!1),y.chipContentsTemplate=n,y.chipRemoveTemplate=h,y.chipInputTemplate=w,y.mdCloseIcon=c.mdClose,p.attr({tabindex:-1}).on("focus",function(){y.onFocus()}),i.ngModel&&(y.configureNgModel(p.controller("ngModel")),m.mdTransformChip&&y.useTransformChipExpression(),m.mdOnAppend&&y.useOnAppendExpression(),m.mdOnAdd&&y.useOnAddExpression(),m.mdOnRemove&&y.useOnRemoveExpression(),m.mdOnSelect&&y.useOnSelectExpression(),w!=g.input&&z.$watch("$mdChipsCtrl.readonly",function(r){r||j.nextTick(function(){if(0===w.indexOf("<md-autocomplete")){var A=p.find("md-autocomplete");y.configureAutocomplete(A.controller("mdAutocomplete"))}y.configureUserInput(p.find("input"))})}),j.nextTick(function(){var r=p.find("input");r&&r.toggleClass("md-input",!0)})),q.length>0){var u=f(q.clone())(z.$parent);l(function(){p.find("md-chips-wrap").prepend(u)})}}}function b(){return{chips:j.processTemplate(MD_CHIPS_TEMPLATE),input:j.processTemplate(CHIP_INPUT_TEMPLATE),"default":j.processTemplate(CHIP_DEFAULT_TEMPLATE),remove:j.processTemplate(CHIP_REMOVE_TEMPLATE)}}var g=b();return{template:function(h,i){return i.$mdUserTemplate=h.clone(),g.chips},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:a,scope:{readonly:"=readonly",removable:"=mdRemovable",placeholder:"@",secondaryPlaceholder:"@",maxChips:"@mdMaxChips",transformChip:"&mdTransformChip",onAppend:"&mdOnAppend",onAdd:"&mdOnAdd",onRemove:"&mdOnRemove",onSelect:"&mdOnSelect",inputAriaLabel:"@",containerHint:"@",deleteHint:"@",deleteButtonLabel:"@",separatorKeys:"=?mdSeparatorKeys",requireMatch:"=?mdRequireMatch",chipAppendDelayString:"@?mdChipAppendDelay"}}}function MdContactChipsCtrl(){this.selectedItem=null,this.searchText=""}function MdContactChips(b,c){function a(d,e){return function(f,g,k,h){var j=h;c.initOptionalProperties(f,e),b(g),g.attr("tabindex","-1"),k.$observe("mdChipAppendDelay",function(i){j.chipAppendDelay=i})}}return{template:function(d,f){return MD_CONTACT_CHIPS_TEMPLATE},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:a,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch",minLength:"=?mdMinLength",highlightFlags:"@?mdHighlightFlags",chipAppendDelay:"@?mdChipAppendDelay"}}}goog.provide("ngmaterial.components.chips"),goog.require("ngmaterial.components.autocomplete"),goog.require("ngmaterial.core"),angular.module("material.components.chips",["material.core","material.components.autocomplete"]),MdChipCtrl.$inject=["$scope","$element","$mdConstant","$timeout","$mdUtil"],angular.module("material.components.chips").controller("MdChipCtrl",MdChipCtrl),MdChipCtrl.prototype.init=function(a){this.parentController=a,this.enableChipEdit=this.parentController.enableChipEdit,this.enableChipEdit&&(this.$element.on("keydown",this.chipKeyDown.bind(this)),this.$element.on("mousedown",this.chipMouseDown.bind(this)),this.getChipContent().addClass("_md-chip-content-edit-is-enabled"))},MdChipCtrl.prototype.getChipContent=function(){var a=this.$element[0].getElementsByClassName("md-chip-content");return angular.element(a[0])},MdChipCtrl.prototype.getContentElement=function(){return angular.element(this.getChipContent().children()[0])},MdChipCtrl.prototype.getChipIndex=function(){return parseInt(this.$element.attr("index"))},MdChipCtrl.prototype.goOutOfEditMode=function(){if(this.isEditting){this.isEditting=!1,this.$element.removeClass("_md-chip-editing"),this.getChipContent()[0].contentEditable="false";var a=this.getChipIndex(),b=this.getContentElement().text();b?(this.parentController.updateChipContents(a,this.getContentElement().text()),this.$mdUtil.nextTick(function(){this.parentController.selectedChip===a&&this.parentController.focusChip(a)}.bind(this))):this.parentController.removeChipAndFocusInput(a)}},MdChipCtrl.prototype.selectNodeContents=function(b){var c,a;document.body.createTextRange?(c=document.body.createTextRange(),c.moveToElementText(b),c.select()):window.getSelection&&(a=window.getSelection(),c=document.createRange(),c.selectNodeContents(b),a.removeAllRanges(),a.addRange(c))},MdChipCtrl.prototype.goInEditMode=function(){this.isEditting=!0,this.$element.addClass("_md-chip-editing"),this.getChipContent()[0].contentEditable="true",this.getChipContent().on("blur",function(){this.goOutOfEditMode()}.bind(this)),this.selectNodeContents(this.getChipContent()[0])},MdChipCtrl.prototype.chipKeyDown=function(a){this.isEditting||a.keyCode!==this.$mdConstant.KEY_CODE.ENTER&&a.keyCode!==this.$mdConstant.KEY_CODE.SPACE?this.isEditting&&a.keyCode===this.$mdConstant.KEY_CODE.ENTER&&(a.preventDefault(),this.goOutOfEditMode()):(a.preventDefault(),this.goInEditMode())},MdChipCtrl.prototype.chipMouseDown=function(){this.getChipIndex()==this.parentController.selectedChip&&this.enableChipEdit&&!this.isEditting&&this.goInEditMode()},MdChip.$inject=["$mdTheming","$mdUtil","$compile","$timeout"],angular.module("material.components.chips").directive("mdChip",MdChip);var DELETE_HINT_TEMPLATE='    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    </span>';MdChipRemove.$inject=["$timeout"],angular.module("material.components.chips").directive("mdChipRemove",MdChipRemove),MdChipTransclude.$inject=["$compile"],angular.module("material.components.chips").directive("mdChipTransclude",MdChipTransclude),MdChipsCtrl.$inject=["$scope","$attrs","$mdConstant","$log","$element","$timeout","$mdUtil"];var DEFAULT_CHIP_APPEND_DELAY=300;angular.module("material.components.chips").controller("MdChipsCtrl",MdChipsCtrl),MdChipsCtrl.prototype.init=function(){var a=this;a.wrapperId="_md-chips-wrapper-"+a.$mdUtil.nextUid(),a.$scope.$watchCollection("$mdChipsCtrl.items",function(){a.setupInputAria(),a.setupWrapperAria()}),a.$attrs.$observe("mdChipAppendDelay",function(b){a.chipAppendDelay=parseInt(b)||DEFAULT_CHIP_APPEND_DELAY})},MdChipsCtrl.prototype.setupInputAria=function(){var a=this.$element.find("input");a&&(a.attr("role","textbox"),a.attr("aria-multiline",!0))},MdChipsCtrl.prototype.setupWrapperAria=function(){var a=this,b=this.$element.find("md-chips-wrap");this.items&&this.items.length?(b.attr("role","listbox"),this.contentIds=this.items.map(function(){return a.wrapperId+"-chip-"+a.$mdUtil.nextUid()}),b.attr("aria-owns",this.contentIds.join(" "))):(b.removeAttr("role"),b.removeAttr("aria-owns"))},MdChipsCtrl.prototype.inputKeydown=function(a){var b=this.getChipBuffer();if(!(this.autocompleteCtrl&&a.isDefaultPrevented&&a.isDefaultPrevented())){if(a.keyCode===this.$mdConstant.KEY_CODE.BACKSPACE){if(0!==this.getCursorPosition(a.target)){return}return a.preventDefault(),a.stopPropagation(),void (this.items.length&&this.selectAndFocusChipSafe(this.items.length-1))}if((!this.separatorKeys||this.separatorKeys.length<1)&&(this.separatorKeys=[this.$mdConstant.KEY_CODE.ENTER]),this.separatorKeys.indexOf(a.keyCode)!==-1){if(this.autocompleteCtrl&&this.requireMatch||!b){return}if(a.preventDefault(),this.hasMaxChipsReached()){return}return this.appendChip(b.trim()),this.resetChipBuffer(),!1}}},MdChipsCtrl.prototype.getCursorPosition=function(a){try{if(a.selectionStart===a.selectionEnd){return a.selectionStart}}catch(b){if(!a.value){return 0}}},MdChipsCtrl.prototype.updateChipContents=function(a,b){a>=0&&a<this.items.length&&(this.items[a]=b,this.ngModelCtrl.$setDirty())},MdChipsCtrl.prototype.isEditingChip=function(){return !!this.$element[0].querySelector("._md-chip-editing")},MdChipsCtrl.prototype.isRemovable=function(){return !!this.ngModelCtrl&&(this.readonly?this.removable:!angular.isDefined(this.removable)||this.removable)},MdChipsCtrl.prototype.chipKeydown=function(a){if(!this.getChipBuffer()&&!this.isEditingChip()){switch(a.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0){return}if(a.preventDefault(),!this.isRemovable()){return}this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:a.preventDefault(),(this.selectedChip<0||this.readonly&&0==this.selectedChip)&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:a.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0){return}a.preventDefault(),this.onFocus()}}},MdChipsCtrl.prototype.getPlaceholder=function(){var a=this.items&&this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return a?this.secondaryPlaceholder:this.placeholder},MdChipsCtrl.prototype.removeAndSelectAdjacentChip=function(b){var c=this,a=c.getAdjacentChipIndex(b);this.$element[0].querySelector("md-chips-wrap"),this.$element[0].querySelector('md-chip[index="'+b+'"]');c.removeChip(b),c.$timeout(function(){c.$timeout(function(){c.selectAndFocusChipSafe(a)})})},MdChipsCtrl.prototype.resetSelectedChip=function(){this.selectedChip=-1,this.ariaTabIndex=null},MdChipsCtrl.prototype.getAdjacentChipIndex=function(a){var b=this.items.length-1;return 0==b?-1:a==b?a-1:a},MdChipsCtrl.prototype.appendChip=function(b){if(this.shouldFocusLastChip=!0,this.useTransformChip&&this.transformChip){var d=this.transformChip({$chip:b});angular.isDefined(d)&&(b=d)}if(angular.isObject(b)){var a=this.items.some(function(g){return angular.equals(b,g)});if(a){return}}if(!(null==b||this.items.indexOf(b)+1)){var f=this.items.push(b),c=f-1;this.ngModelCtrl.$setDirty(),this.validateModel(),this.useOnAdd&&this.onAdd&&this.onAdd({$chip:b,$index:c})}},MdChipsCtrl.prototype.useTransformChipExpression=function(){this.useTransformChip=!0},MdChipsCtrl.prototype.useOnAddExpression=function(){this.useOnAdd=!0},MdChipsCtrl.prototype.useOnRemoveExpression=function(){this.useOnRemove=!0},MdChipsCtrl.prototype.useOnSelectExpression=function(){this.useOnSelect=!0},MdChipsCtrl.prototype.getChipBuffer=function(){var a=this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer;return angular.isString(a)?a:""},MdChipsCtrl.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},MdChipsCtrl.prototype.hasMaxChipsReached=function(){return angular.isString(this.maxChips)&&(this.maxChips=parseInt(this.maxChips,10)||0),this.maxChips>0&&this.items.length>=this.maxChips},MdChipsCtrl.prototype.validateModel=function(){this.ngModelCtrl.$setValidity("md-max-chips",!this.hasMaxChipsReached())},MdChipsCtrl.prototype.removeChip=function(a){var b=this.items.splice(a,1);this.ngModelCtrl.$setDirty(),this.validateModel(),b&&b.length&&this.useOnRemove&&this.onRemove&&this.onRemove({$chip:b[0],$index:a})},MdChipsCtrl.prototype.removeChipAndFocusInput=function(a){this.removeChip(a),this.autocompleteCtrl?(this.autocompleteCtrl.hidden=!0,this.$mdUtil.nextTick(this.onFocus.bind(this))):this.onFocus()},MdChipsCtrl.prototype.selectAndFocusChipSafe=function(a){if(!this.items.length||a===-1){return this.focusInput()}if(a>=this.items.length){if(!this.readonly){return this.onFocus()}a=0}a=Math.max(a,0),a=Math.min(a,this.items.length-1),this.selectChip(a),this.focusChip(a)},MdChipsCtrl.prototype.focusLastChipThenInput=function(){var a=this;a.shouldFocusLastChip=!1,a.focusChip(this.items.length-1),a.$timeout(function(){a.focusInput()},a.chipAppendDelay)},MdChipsCtrl.prototype.focusInput=function(){this.selectChip(-1),this.onFocus()},MdChipsCtrl.prototype.selectChip=function(a){a>=-1&&a<=this.items.length?(this.selectedChip=a,this.useOnSelect&&this.onSelect&&this.onSelect({$chip:this.items[a]})):this.$log.warn("Selected Chip index out of bounds; ignoring.")},MdChipsCtrl.prototype.selectAndFocusChip=function(a){this.selectChip(a),a!=-1&&this.focusChip(a)},MdChipsCtrl.prototype.focusChip=function(a){var b=this.$element[0].querySelector('md-chip[index="'+a+'"] .md-chip-content');this.ariaTabIndex=a,b.focus()},MdChipsCtrl.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var b=this;a.$render=function(){b.items=b.ngModelCtrl.$viewValue}},MdChipsCtrl.prototype.onFocus=function(){var a=this.$element[0].querySelector("input");a&&a.focus(),this.resetSelectedChip()},MdChipsCtrl.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.setupInputAria(),this.resetSelectedChip()},MdChipsCtrl.prototype.onInputBlur=function(){this.inputHasFocus=!1,this.shouldAddOnBlur()&&(this.appendChip(this.getChipBuffer().trim()),this.resetChipBuffer())},MdChipsCtrl.prototype.configureUserInput=function(b){this.userInputElement=b;var d=b.controller("ngModel");d!=this.ngModelCtrl&&(this.userInputNgModelCtrl=d);var a=this.$scope,f=this,c=function(g,h){a.$evalAsync(angular.bind(f,h,g))};b.attr({tabindex:0}).on("keydown",function(e){c(e,f.inputKeydown)}).on("focus",function(e){c(e,f.onInputFocus)}).on("blur",function(e){c(e,f.onInputBlur)})},MdChipsCtrl.prototype.configureAutocomplete=function(a){a&&(this.autocompleteCtrl=a,a.registerSelectedItemWatcher(angular.bind(this,function(b){if(b){if(this.hasMaxChipsReached()){return}this.appendChip(b),this.resetChipBuffer()}})),this.$element.find("input").on("focus",angular.bind(this,this.onInputFocus)).on("blur",angular.bind(this,this.onInputBlur)))},MdChipsCtrl.prototype.shouldAddOnBlur=function(){this.validateModel();var b=this.getChipBuffer().trim(),c=this.ngModelCtrl.$valid,a=this.autocompleteCtrl&&!this.autocompleteCtrl.hidden;return this.userInputNgModelCtrl&&(c=c&&this.userInputNgModelCtrl.$valid),this.addOnBlur&&!this.requireMatch&&b&&c&&!a},MdChipsCtrl.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0},MdChipsCtrl.prototype.contentIdFor=function(a){return this.contentIds[a]},MdChips.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout","$$mdSvgRegistry"],angular.module("material.components.chips").directive("mdChips",MdChips);var MD_CHIPS_TEMPLATE='      <md-chips-wrap          id="{{$mdChipsCtrl.wrapperId}}"          tabindex="{{$mdChipsCtrl.readonly ? 0 : -1}}"          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus(),                       \'md-readonly\': !$mdChipsCtrl.ngModelCtrl || $mdChipsCtrl.readonly,                      \'md-removable\': $mdChipsCtrl.isRemovable() }"          aria-setsize="{{$mdChipsCtrl.items.length}}"          class="md-chips">        <span ng-if="$mdChipsCtrl.readonly" class="md-visually-hidden">          {{$mdChipsCtrl.containerHint}}        </span>        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index, \'md-readonly\': !$mdChipsCtrl.ngModelCtrl || $mdChipsCtrl.readonly}">          <div class="md-chip-content"              tabindex="{{$mdChipsCtrl.ariaTabIndex == $index ? 0 : -1}}"              id="{{$mdChipsCtrl.contentIdFor($index)}}"              role="option"              aria-selected="{{$mdChipsCtrl.selectedChip == $index}}"               aria-posinset="{{$index}}"              ng-click="!$mdChipsCtrl.readonly && $mdChipsCtrl.focusChip($index)"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div ng-if="$mdChipsCtrl.isRemovable()"               class="md-chip-remove-container"               tabindex="-1"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div class="md-chip-input-container" ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl">          <div md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>',CHIP_INPUT_TEMPLATE='        <input            class="md-input"            tabindex="0"            aria-label="{{$mdChipsCtrl.inputAriaLabel}}"             placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',CHIP_DEFAULT_TEMPLATE="      <span>{{$chip}}</span>",CHIP_REMOVE_TEMPLATE='      <button          class="md-chip-remove"          ng-if="$mdChipsCtrl.isRemovable()"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          type="button"          tabindex="-1">        <md-icon md-svg-src="{{ $mdChipsCtrl.mdCloseIcon }}"></md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </button>';angular.module("material.components.chips").controller("MdContactChipsCtrl",MdContactChipsCtrl),MdContactChipsCtrl.prototype.queryContact=function(a){return this.contactQuery({$query:a})},MdContactChipsCtrl.prototype.itemName=function(a){return a[this.contactName]},MdContactChips.$inject=["$mdTheming","$mdUtil"],angular.module("material.components.chips").directive("mdContactChips",MdContactChips);var MD_CONTACT_CHIPS_TEMPLATE='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-chip-append-delay="{{$mdContactChipsCtrl.chipAppendDelay}}"           md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.itemName(item)"              md-no-cache="true"              md-min-length="$mdContactChipsCtrl.minLength"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}"                  ng-if="item[$mdContactChipsCtrl.contactImage]" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText"                    md-highlight-flags="{{$mdContactChipsCtrl.highlightFlags}}">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}"                  ng-if="$chip[$mdContactChipsCtrl.contactImage]" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>';ngmaterial.components.chips=angular.module("material.components.chips");