/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.4-master-87d1cb1
 */
;function SidenavService(j,f,p,c){function b(l,n){var d=function(){return !1},a=function(){return p.when(f.supplant(g,[n||""]))};return angular.extend({isLockedOpen:d,isOpen:d,toggle:a,open:a,close:a,onClose:angular.noop,then:function(i){return m(n).then(i||angular.noop)}},l)}function h(d,e){var a=j.get(d);return a||e?a:void c.error(f.supplant(g,[d||""]))}function m(a){return j.when(a)["catch"](c.error)}var g="SideNav '{0}' is not available! Did you use md-component-id='{0}'?",k={find:h,waitFor:m};return function(d,l){if(angular.isUndefined(d)){return k}var a=l===!0,i=k.find(d,a);return !i&&a?k.waitFor(d):!i&&angular.isUndefined(l)?b(k,d):i}}function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(b,d,a,c){}}}function SidenavDirective(v,h,A,g,b,q,y,k,w,x,B,z,j){function f(Q,J,N,M){function r(a,p){Q.isLockedOpen=a,a===p?J.toggleClass("md-locked-open",!!a):q[a?"addClass":"removeClass"](J,"md-locked-open"),K&&K.toggleClass("md-locked-open",!!a)}function d(C){var p=h.findFocusTarget(J)||h.findFocusTarget(J,"[md-sidenav-focus]")||J,D=J.parent();D[C?"on":"off"]("keydown",l),K&&K[C?"on":"off"]("click",i);var a=L(D,C);return C&&(c=B[0].activeElement,o=b.getLastInteractionType()),G(C),H=x.all([C&&K?q.enter(K,D):K?q.leave(K):x.when(!0),q[C?"removeClass":"addClass"](J,"md-closed")]).then(function(){Q.isOpen&&(j(function(){m.triggerHandler("resize")}),p&&p.focus()),a&&a()})}function L(C,E){var a=J[0],D=C[0].scrollTop;if(E&&D){u={top:a.style.top,bottom:a.style.bottom,height:a.style.height};var p={top:D+"px",bottom:"auto",height:C[0].clientHeight+"px"};J.css(p),K.css(p)}if(!E&&u){return function(){a.style.top=u.top,a.style.bottom=u.bottom,a.style.height=u.height,K[0].style.top=null,K[0].style.bottom=null,K[0].style.height=null,u=null}}}function G(a){a&&!P?(P=s.css("overflow"),s.css("overflow","hidden")):angular.isDefined(P)&&(s.css("overflow",P),P=void 0)}function e(a){return Q.isOpen==a?x.when(!0):(Q.isOpen&&M.onCloseCb&&M.onCloseCb(),x(function(p){Q.isOpen=a,h.nextTick(function(){H.then(function(C){!Q.isOpen&&c&&"keyboard"===o&&(c.focus(),c=null),p(C)})})}))}function l(a){var p=a.keyCode===A.KEY_CODE.ESCAPE;return p?i(a):x.when(!0)}function i(a){return a.preventDefault(),M.close()}var P,K,o,u,s=null,c=null,H=x.when(!0),n=k(N.mdIsLockedOpen),m=angular.element(z),t=function(){return n(Q.$parent,{$media:function(a){return w.warn("$media is deprecated for is-locked-open. Use $mdMedia instead."),v(a)},$mdMedia:v})};N.mdDisableScrollTarget&&(s=B[0].querySelector(N.mdDisableScrollTarget),s?s=angular.element(s):w.warn(h.supplant('mdSidenav: couldn\'t find element matching selector "{selector}". Falling back to parent.',{selector:N.mdDisableScrollTarget}))),s||(s=J.parent()),N.hasOwnProperty("mdDisableBackdrop")||(K=h.createBackdrop(Q,"md-sidenav-backdrop md-opaque ng-enter")),J.addClass("_md"),g(J),K&&g.inherit(K,J),J.on("$destroy",function(){K&&K.remove(),M.destroy()}),Q.$on("$destroy",function(){K&&K.remove()}),Q.$watch(t,r),Q.$watch("isOpen",d),M.$toggleOpen=e}return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(a){return a.addClass("md-closed").attr("tabIndex","-1"),f}}}function SidenavController(j,f,p,c,b){var h=this;h.isOpen=function(){return !!j.isOpen},h.isLockedOpen=function(){return !!j.isLockedOpen},h.onClose=function(a){return h.onCloseCb=a,h},h.open=function(){return h.$toggleOpen(!0)},h.close=function(){return h.$toggleOpen(!1)},h.toggle=function(){return h.$toggleOpen(!j.isOpen)},h.$toggleOpen=function(a){return c.when(j.isOpen=a)};var m=f.mdComponentId,g=m&&m.indexOf(b.startSymbol())>-1,k=g?b(m)(j.$parent):m;h.destroy=p.register(h,k),g&&f.$observe("mdComponentId",function(a){a&&a!==h.$$mdHandle&&(h.destroy(),h.destroy=p.register(h,a))})}goog.provide("ngmaterial.components.sidenav"),goog.require("ngmaterial.components.backdrop"),goog.require("ngmaterial.core"),SidenavService.$inject=["$mdComponentRegistry","$mdUtil","$q","$log"],SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$mdInteraction","$animate","$compile","$parse","$log","$q","$document","$window","$$rAF"],SidenavController.$inject=["$scope","$attrs","$mdComponentRegistry","$q","$interpolate"],angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController),ngmaterial.components.sidenav=angular.module("material.components.sidenav");