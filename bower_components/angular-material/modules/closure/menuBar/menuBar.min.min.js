/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.5
 */
;goog.provide("ngmaterial.components.menuBar");goog.require("ngmaterial.components.icon");goog.require("ngmaterial.components.menu");goog.require("ngmaterial.core");angular.module("material.components.menuBar",["material.core","material.components.icon","material.components.menu"]);MenuBarController["$inject"]=["$scope","$rootScope","$element","$attrs","$mdConstant","$document","$mdUtil","$timeout"];angular.module("material.components.menuBar").controller("MenuBarController",MenuBarController);var BOUND_MENU_METHODS=["handleKeyDown","handleMenuHover","scheduleOpenHoveredMenu","cancelScheduledOpen"];function MenuBarController(l,n,k,m,r,o,q,p){this.$element=k;this.$attrs=m;this.$mdConstant=r;this.$mdUtil=q;this.$document=o;this.$scope=l;this.$rootScope=n;this.$timeout=p;var j=this;angular.forEach(BOUND_MENU_METHODS,function(a){j[a]=angular.bind(j,j[a])})}MenuBarController.prototype.init=function(){var g=this.$element;var h=this.$mdUtil;var i=this.$scope;var j=this;var f=[];g.on("keydown",this.handleKeyDown);this.parentToolbar=h.getClosest(g,"MD-TOOLBAR");f.push(this.$rootScope.$on("$mdMenuOpen",function(a,b){if(j.getMenus().indexOf(b[0])!=-1){g[0].classList.add("md-open");b[0].classList.add("md-open");j.currentlyOpenMenu=b.controller("mdMenu");j.currentlyOpenMenu.registerContainerProxy(j.handleKeyDown);j.enableOpenOnHover()}}));f.push(this.$rootScope.$on("$mdMenuClose",function(a,c,b){var d=j.getMenus();if(d.indexOf(c[0])!=-1){g[0].classList.remove("md-open");c[0].classList.remove("md-open")}if(g[0].contains(c[0])){var e=c[0];while(e&&d.indexOf(e)==-1){e=h.getClosest(e,"MD-MENU",true)}if(e){if(!b.skipFocus){e.querySelector("button:not([disabled])").focus()}j.currentlyOpenMenu=undefined;j.disableOpenOnHover();j.setKeyboardMode(true)}}}));i.$on("$destroy",function(){j.disableOpenOnHover();while(f.length){f.shift()()}});this.setKeyboardMode(true)};MenuBarController.prototype.setKeyboardMode=function(b){if(b){this.$element[0].classList.add("md-keyboard-mode")}else{this.$element[0].classList.remove("md-keyboard-mode")}};MenuBarController.prototype.enableOpenOnHover=function(){if(this.openOnHoverEnabled){return}var b=this;b.openOnHoverEnabled=true;if(b.parentToolbar){b.parentToolbar.classList.add("md-has-open-menu");b.$mdUtil.nextTick(function(){angular.element(b.parentToolbar).on("click",b.handleParentClick)},false)}angular.element(b.getMenus()).on("mouseenter",b.handleMenuHover)};MenuBarController.prototype.handleMenuHover=function(b){this.setKeyboardMode(false);if(this.openOnHoverEnabled){this.scheduleOpenHoveredMenu(b)}};MenuBarController.prototype.disableOpenOnHover=function(){if(!this.openOnHoverEnabled){return}this.openOnHoverEnabled=false;if(this.parentToolbar){this.parentToolbar.classList.remove("md-has-open-menu");angular.element(this.parentToolbar).off("click",this.handleParentClick)}angular.element(this.getMenus()).off("mouseenter",this.handleMenuHover)};MenuBarController.prototype.scheduleOpenHoveredMenu=function(f){var e=angular.element(f.currentTarget);var d=e.controller("mdMenu");this.setKeyboardMode(false);this.scheduleOpenMenu(d)};MenuBarController.prototype.scheduleOpenMenu=function(f){var e=this;var d=this.$timeout;if(f!=e.currentlyOpenMenu){d.cancel(e.pendingMenuOpen);e.pendingMenuOpen=d(function(){e.pendingMenuOpen=undefined;if(e.currentlyOpenMenu){e.currentlyOpenMenu.close(true,{closeAll:true})}f.open()},200,false)}};MenuBarController.prototype.handleKeyDown=function(j){var e=this.$mdConstant.KEY_CODE;var l=this.currentlyOpenMenu;var m=l&&l.isOpen;this.setKeyboardMode(true);var k,n,i;switch(j.keyCode){case e.DOWN_ARROW:if(l){l.focusMenuContainer()}else{this.openFocusedMenu()}k=true;break;case e.UP_ARROW:l&&l.close();k=true;break;case e.LEFT_ARROW:n=this.focusMenu(-1);if(m){i=angular.element(n).controller("mdMenu");this.scheduleOpenMenu(i)}k=true;break;case e.RIGHT_ARROW:n=this.focusMenu(+1);if(m){i=angular.element(n).controller("mdMenu");this.scheduleOpenMenu(i)}k=true;break}if(k){j&&j.preventDefault&&j.preventDefault();j&&j.stopImmediatePropagation&&j.stopImmediatePropagation()}};MenuBarController.prototype.focusMenu=function(e){var f=this.getMenus();var g=this.getFocusedMenuIndex();if(g==-1){g=this.getOpenMenuIndex()}var h=false;if(g==-1){g=0;h=true}else{if(e<0&&g>0||e>0&&g<f.length-e){g+=e;h=true}}if(h){f[g].querySelector("button").focus();return f[g]}};MenuBarController.prototype.openFocusedMenu=function(){var b=this.getFocusedMenu();b&&angular.element(b).controller("mdMenu").open()};MenuBarController.prototype.getMenus=function(){var b=this.$element;return this.$mdUtil.nodesToArray(b[0].children).filter(function(a){return a.nodeName=="MD-MENU"})};MenuBarController.prototype.getFocusedMenu=function(){return this.getMenus()[this.getFocusedMenuIndex()]};MenuBarController.prototype.getFocusedMenuIndex=function(){var f=this.$mdUtil;var e=f.getClosest(this.$document[0].activeElement,"MD-MENU");if(!e){return -1}var d=this.getMenus().indexOf(e);return d};MenuBarController.prototype.getOpenMenuIndex=function(){var c=this.getMenus();for(var d=0;d<c.length;++d){if(c[d].classList.contains("md-open")){return d}}return -1};MenuBarController.prototype.handleParentClick=function(c){var d=this.querySelector("md-menu.md-open");if(d&&!d.contains(c.target)){angular.element(d).controller("mdMenu").close(true,{closeAll:true})}};MenuBarDirective["$inject"]=["$mdUtil","$mdTheming"];angular.module("material.components.menuBar").directive("mdMenuBar",MenuBarDirective);function MenuBarDirective(f,e){return{restrict:"E",require:"mdMenuBar",controller:"MenuBarController",compile:function d(a,b){if(!b.ariaRole){a[0].setAttribute("role","menubar")}angular.forEach(a[0].children,function(j){if(j.nodeName=="MD-MENU"){if(!j.hasAttribute("md-position-mode")){j.setAttribute("md-position-mode","left bottom");j.querySelector("button, a, md-button").setAttribute("role","menuitem")}var i=f.nodesToArray(j.querySelectorAll("md-menu-content"));angular.forEach(i,function(g){g.classList.add("md-menu-bar-menu");g.classList.add("md-dense");if(!g.hasAttribute("width")){g.setAttribute("width",5)}})}});a.find("md-menu-item").addClass("md-in-menu-bar");return function c(l,m,n,k){m.addClass("_md");e(l,m);k.init()}}}}angular.module("material.components.menuBar").directive("mdMenuDivider",MenuDividerDirective);function MenuDividerDirective(){return{restrict:"E",compile:function(c,d){if(!d.role){c[0].setAttribute("role","separator")}}}}MenuItemController["$inject"]=["$scope","$element","$attrs"];angular.module("material.components.menuBar").controller("MenuItemController",MenuItemController);function MenuItemController(f,d,e){this.$element=d;this.$attrs=e;this.$scope=f}MenuItemController.prototype.init=function(f){var d=this.$element;var e=this.$attrs;this.ngModel=f;if(e.type=="checkbox"||e.type=="radio"){this.mode=e.type;this.iconEl=d[0].children[0];this.buttonEl=d[0].children[1];if(f){this.initClickListeners()}}};MenuItemController.prototype.clearNgAria=function(){var d=this.$element[0];var c=["role","tabindex","aria-invalid","aria-checked"];angular.forEach(c,function(a){d.removeAttribute(a)})};MenuItemController.prototype.initClickListeners=function(){var m=this;var v=this.ngModel;var o=this.$scope;var p=this.$attrs;var n=this.$element;var s=this.mode;this.handleClick=angular.bind(this,this.handleClick);var q=this.iconEl;var u=angular.element(this.buttonEl);var t=this.handleClick;p.$observe("disabled",r);r(p.disabled);v.$render=function w(){m.clearNgAria();if(x()){q.style.display="";u.attr("aria-checked","true")}else{q.style.display="none";u.attr("aria-checked","false")}};o.$$postDigest(v.$render);function x(){if(s=="radio"){var a=p.ngValue?o.$eval(p.ngValue):p.value;return v.$modelValue==a}else{return v.$modelValue}}function r(a){if(a){u.off("click",t)}else{u.on("click",t)}}};MenuItemController.prototype.handleClick=function(j){var h=this.mode;var i=this.ngModel;var g=this.$attrs;var e;if(h=="checkbox"){e=!i.$modelValue}else{if(h=="radio"){e=g.ngValue?this.$scope.$eval(g.ngValue):g.value}}i.$setViewValue(e);i.$render()};MenuItemDirective["$inject"]=["$mdUtil","$mdConstant","$$mdSvgRegistry"];angular.module("material.components.menuBar").directive("mdMenuItem",MenuItemDirective);function MenuItemDirective(f,e,d){return{controller:"MenuItemController",require:["mdMenuItem","?ngModel"],priority:e.BEFORE_NG_ARIA,compile:function(r,a){var p=a.type;var m="md-in-menu-bar";if((p=="checkbox"||p=="radio")&&r.hasClass(m)){var c=r[0].textContent;var q=angular.element('<md-button type="button"></md-button>');var b='<md-icon md-svg-src="'+d.mdChecked+'"></md-icon>';q.html(c);q.attr("tabindex","0");r.html("");r.append(angular.element(b));r.append(q);r.addClass("md-indent").removeClass(m);n("role",p=="checkbox"?"menuitemcheckbox":"menuitemradio",q);o("ng-disabled")}else{n("role","menuitem",r[0].querySelector("md-button, button, a"))}return function(j,k,l,g){var i=g[0];var h=g[1];i.init(h)};function n(g,h,i){i=i||r;if(i instanceof angular.element){i=i[0]}if(!i.hasAttribute(g)){i.setAttribute(g,h)}}function o(h){var g=f.prefixer(h);angular.forEach(g,function(j){if(r[0].hasAttribute(j)){var i=r[0].getAttribute(j);q[0].setAttribute(j,i);r[0].removeAttribute(j)}})}}}}ngmaterial.components.menuBar=angular.module("material.components.menuBar");