/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.5
 */
;goog.provide("ngmaterial.components.radioButton");goog.require("ngmaterial.core");mdRadioGroupDirective["$inject"]=["$mdUtil","$mdConstant","$mdTheming","$timeout"];mdRadioButtonDirective["$inject"]=["$mdAria","$mdUtil","$mdTheming"];angular.module("material.components.radioButton",["material.core"]).directive("mdRadioGroup",mdRadioGroupDirective).directive("mdRadioButton",mdRadioButtonDirective);function mdRadioGroupDirective(h,c,e,b){d.prototype=g();return{restrict:"E",controller:["$element",d],require:["mdRadioGroup","?ngModel"],link:{pre:a}};function a(o,n,j,i){n.addClass("_md");e(n);var m=i[0];var l=i[1]||h.fakeNgModel();m.init(l);o.mouseActive=false;n.attr({role:"radiogroup",tabIndex:n.attr("tabindex")||"0"}).on("keydown",p).on("mousedown",function(q){o.mouseActive=true;b(function(){o.mouseActive=false},100)}).on("focus",function(){if(o.mouseActive===false){m.$element.addClass("md-focused")}}).on("blur",function(){m.$element.removeClass("md-focused")});function k(){if(!n.hasClass("md-focused")){n.addClass("md-focused")}}function p(r){var s=r.which||r.keyCode;if(s!=c.KEY_CODE.ENTER&&r.currentTarget!=r.target){return}switch(s){case c.KEY_CODE.LEFT_ARROW:case c.KEY_CODE.UP_ARROW:r.preventDefault();m.selectPrevious();k();break;case c.KEY_CODE.RIGHT_ARROW:case c.KEY_CODE.DOWN_ARROW:r.preventDefault();m.selectNext();k();break;case c.KEY_CODE.ENTER:var q=angular.element(h.getClosest(n[0],"form"));if(q.length>0){q.triggerHandler("submit")}break}}}function d(i){this._radioButtonRenderFns=[];this.$element=i}function g(){return{init:function(i){this._ngModelCtrl=i;this._ngModelCtrl.$render=angular.bind(this,this.render)},add:function(i){this._radioButtonRenderFns.push(i)},remove:function(j){var i=this._radioButtonRenderFns.indexOf(j);if(i!==-1){this._radioButtonRenderFns.splice(i,1)}},render:function(){this._radioButtonRenderFns.forEach(function(i){i()})},setViewValue:function(j,i){this._ngModelCtrl.$setViewValue(j,i);this.render()},getViewValue:function(){return this._ngModelCtrl.$viewValue},selectNext:function(){return f(this.$element,1)},selectPrevious:function(){return f(this.$element,-1)},setActiveDescendant:function(i){this.$element.attr("aria-activedescendant",i)},isDisabled:function(){return this.$element[0].hasAttribute("disabled")}}}function f(k,i){var l=h.iterator(k[0].querySelectorAll("md-radio-button"),true);if(l.count()){var n=function(o){return !angular.element(o).attr("disabled")};var j=k[0].querySelector("md-radio-button.md-checked");var m=l[i<0?"previous":"next"](j,n)||l.first();angular.element(m).triggerHandler("click")}}}function mdRadioButtonDirective(a,e,d){var b="md-checked";return{restrict:"E",require:"^mdRadioGroup",transclude:true,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-off"></div><div class="md-on"></div></div><div ng-transclude class="md-label"></div>',link:c};function c(m,i,k,h){var n;d(i);l(i,m);if(k.ngValue){e.nextTick(j,false)}else{j()}function j(){if(!h){throw"RadioButton: No RadioGroupController could be found."}h.add(f);k.$observe("value",f);i.on("click",g).on("$destroy",function(){h.remove(f)})}function g(o){if(i[0].hasAttribute("disabled")||h.isDisabled()){return}m.$apply(function(){h.setViewValue(k.value,o&&o.type)})}function f(){var o=h.getViewValue()==k.value;if(o===n){return}if(i[0].parentNode.nodeName.toLowerCase()!=="md-radio-group"){i.parent().toggleClass(b,o)}if(o){h.setActiveDescendant(i.attr("id"))}n=o;i.attr("aria-checked",o).toggleClass(b,o)}function l(o,p){o.attr({id:k.id||"radio_"+e.nextUid(),role:"radio","aria-checked":"false"});a.expectWithText(o,"aria-label")}}}ngmaterial.components.radioButton=angular.module("material.components.radioButton");