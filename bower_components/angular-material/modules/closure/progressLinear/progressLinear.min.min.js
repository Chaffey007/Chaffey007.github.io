/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.5
 */
;goog.provide("ngmaterial.components.progressLinear");goog.require("ngmaterial.core");MdProgressLinearDirective["$inject"]=["$mdTheming","$mdUtil","$log"];angular.module("material.components.progressLinear",["material.core"]).directive("mdProgressLinear",MdProgressLinearDirective);function MdProgressLinearDirective(s,u,l){var m="determinate";var v="indeterminate";var t="buffer";var p="query";var o="_md-progress-linear-disabled";return{restrict:"E",template:'<div class="md-container"><div class="md-dashed"></div><div class="md-bar md-bar1"></div><div class="md-bar md-bar2"></div></div>',compile:n};function n(a,c,b){a.attr("aria-valuemin",0);a.attr("aria-valuemax",100);a.attr("role","progressbar");return r}function r(h,b,z){s(b);var d;var i=z.hasOwnProperty("disabled");var c=u.dom.animator.toCss;var k=angular.element(b[0].querySelector(".md-bar1"));var y=angular.element(b[0].querySelector(".md-bar2"));var g=angular.element(b[0].querySelector(".md-container"));b.attr("md-mode",a()).toggleClass(o,i);f();e();function e(){z.$observe("value",function(w){var x=q(w);b.attr("aria-valuenow",x);if(a()!=p){j(y,x)}});z.$observe("mdBufferValue",function(w){j(k,q(w))});z.$observe("disabled",function(w){if(w===true||w===false){i=!!w}else{i=angular.isDefined(w)}b.toggleClass(o,i);g.toggleClass(d,!i)});z.$observe("mdMode",function(w){if(d){g.removeClass(d)}switch(w){case p:case t:case m:case v:g.addClass(d="md-mode-"+w);break;default:g.addClass(d="md-mode-"+v);break}})}function f(){if(angular.isUndefined(z.mdMode)){var B=angular.isDefined(z.value);var w=B?m:v;var x="Auto-adding the missing md-mode='{0}' to the ProgressLinear element";b.attr("md-mode",w);z.mdMode=w}}function a(){var w=(z.mdMode||"").trim();if(w){switch(w){case m:case v:case t:case p:break;default:w=v;break}}return w}function j(w,x){if(i||!a()){return}var D=u.supplant("translateX({0}%) scale({1},1)",[(x-100)/2,x/100]);var C=c({transform:D});angular.element(w).css(C)}}function q(a){return Math.max(0,Math.min(a||0,100))}}ngmaterial.components.progressLinear=angular.module("material.components.progressLinear");