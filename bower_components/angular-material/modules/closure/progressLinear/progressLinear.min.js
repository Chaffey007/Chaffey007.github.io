/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.5
 */
;goog.provide("ngmaterial.components.progressLinear");goog.require("ngmaterial.core");MdProgressLinearDirective["$inject"]=["$mdTheming","$mdUtil","$log"];angular.module("material.components.progressLinear",["material.core"]).directive("mdProgressLinear",MdProgressLinearDirective);function MdProgressLinearDirective(d,b,k){var j="determinate";var a="indeterminate";var c="buffer";var g="query";var h="_md-progress-linear-disabled";return{restrict:"E",template:'<div class="md-container"><div class="md-dashed"></div><div class="md-bar md-bar1"></div><div class="md-bar md-bar2"></div></div>',compile:i};function i(m,n,l){m.attr("aria-valuemin",0);m.attr("aria-valuemax",100);m.attr("role","progressbar");return e}function e(x,q,s){d(q);var o;var w=s.hasOwnProperty("disabled");var p=b.dom.animator.toCss;var u=angular.element(q[0].querySelector(".md-bar1"));var t=angular.element(q[0].querySelector(".md-bar2"));var l=angular.element(q[0].querySelector(".md-container"));q.attr("md-mode",r()).toggleClass(h,w);m();n();function n(){s.$observe("value",function(z){var y=f(z);q.attr("aria-valuenow",y);if(r()!=g){v(t,y)}});s.$observe("mdBufferValue",function(y){v(u,f(y))});s.$observe("disabled",function(y){if(y===true||y===false){w=!!y}else{w=angular.isDefined(y)}q.toggleClass(h,w);l.toggleClass(o,!w)});s.$observe("mdMode",function(y){if(o){l.removeClass(o)}switch(y){case g:case c:case j:case a:l.addClass(o="md-mode-"+y);break;default:l.addClass(o="md-mode-"+a);break}})}function m(){if(angular.isUndefined(s.mdMode)){var y=angular.isDefined(s.value);var A=y?j:a;var z="Auto-adding the missing md-mode='{0}' to the ProgressLinear element";q.attr("md-mode",A);s.mdMode=A}}function r(){var y=(s.mdMode||"").trim();if(y){switch(y){case j:case a:case c:case g:break;default:y=a;break}}return y}function v(A,z){if(w||!r()){return}var B=b.supplant("translateX({0}%) scale({1},1)",[(z-100)/2,z/100]);var y=p({transform:B});angular.element(A).css(y)}}function f(l){return Math.max(0,Math.min(l||0,100))}}ngmaterial.components.progressLinear=angular.module("material.components.progressLinear");